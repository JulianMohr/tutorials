variables:
      OWNER: ontresearch
      GIT_SUBMODULE_STRATEGY: recursive
      IMAGENAME: "epi2melabs-notebook"
image: ${IMAGE}

stages:
    - build
    - publish

build-branch:
    stage: build
    only:
        - branches
    before_script:
        - apk add make bash git openssl py3-virtualenv python3
    script:
        - echo "Logging in to internal gitlab container registry";
        - echo ${CI_BUILD_TOKEN} | docker login --username gitlab-ci-token --password-stdin ${CI_REGISTRY};
        - UPSTREAM=dev PYTHON=python3 make ${IMAGENAME};
        - TAG=${CI_REGISTRY}/${CI_PROJECT_PATH}/${IMAGENAME}:${CI_COMMIT_REF_NAME};
        - echo "Pushing ${TAG}";
        - docker tag $OWNER/${IMAGENAME}:latest ${TAG};
        - docker push ${TAG};
        # on dev tag/push with commit hash also
        - if [[ ${CI_COMMIT_BRANCH} == 'dev' ]]; then
              DEVTAG=${TAG}-${CI_COMMIT_SHORT_SHA};
              echo "Pushing ${DEV_TAG}";
              docker tag $OWNER/${IMAGENAME}:latest ${DEVTAG};
              docker push ${DEVTAG};
              HUBTAG=ontresearch/${IMAGENAME}:dev;
              echo "Pushing dockerhub ${HUBTAG}";
              echo ${DOCKERHUB_TOKEN} | docker login --username epi2melabs --password-stdin;
              docker tag $OWNER/${IMAGENAME}:latest ${HUBTAG};
              docker push ${HUBTAG};
          fi
        - echo "All done";

publish-tag:
    stage: publish
    only:
        - tags
    before_script:
        - apk add make bash git openssl py3-virtualenv python3
    script:
        # We could pull the dev-commit tag from the repo, but instead let's
        # always build from the latest tag of the upstream image on dockerhub.
        # All being well this should amount to the same thing.
        - echo "Logging in to internal gitlab container registry";
        - echo ${DOCKERHUB_TOKEN} | docker login --username epi2melabs --password-stdin;
        - export UPSTREAM=$(PYTHON=python3 make echo_latest_upstream | tail -n 1);
        - echo "Upstream tag ${UPSTREAM}";
        - PYTHON=python3 make ${IMAGENAME};
        - HUBTAG=ontresearch/${IMAGENAME}:${CI_COMMIT_TAG};
        - echo "Pushing dockerhub ${HUBTAG}";
        - docker tag $OWNER/${IMAGENAME}:latest ${HUBTAG};
        - docker push ${HUBTAG};


# Push repo to github
push-github:
    stage: publish
    image: $GH_PUSH_IMAGE
    before_script:
        - apt-get update -qq && apt-get install -y -qq git
        - mkdir ~/.ssh/
        - cp $LABS_BOT_GH_KEY ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
        - echo -e "Host github.com\n\tStrictHostKeyChecking no\n\tHostname ssh.github.com\n\tPort 443\n\n" > ~/.ssh/config
        - git config --global user.email "epi2melabs@nanoporetech.com"
        - git config --global user.name "epi2melabs-bot"
    script:
        - git remote add ont ${CI_REPOSITORY_URL} || true
        - git remote add github git@github.com:epi2me-labs/${CI_PROJECT_NAME}.git || true
        - git fetch ont dev --tags
        - git fetch ont master
        - git fetch github master
        - git checkout --track github/master || git checkout master
        - git merge ${CI_COMMIT_REF_NAME}
        - git push github master
        - git push github ${CI_COMMIT_REF_NAME}
    only:
        - tags

# Rebuild notebooks and push to giithub blog
rebuild-notebooks:
    stage: publish
    image: $GH_PUSH_IMAGE
    before_script:
        - apt-get update -qq && apt-get install -y -qq git python3-pip
        - mkdir ~/.ssh/
        - cp $LABS_BOT_GH_KEY ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
        - echo -e "Host github.com\n\tStrictHostKeyChecking no\n\tHostname ssh.github.com\n\tPort 443\n\n" > ~/.ssh/config
        - git config --global user.email "epi2melabs@nanoporetech.com"
        - git config --global user.name "epi2melabs-bot"
        - pip3 install jupyterlab
    script:
        - cd ../
        - jupyter nbconvert --to html tutorials/tutorials/*.ipynb
        - git clone git@github.com:epi2me-labs/epi2me-labs.github.io.git
        - cp tutorials/tutorials/*.html epi2me-labs.github.io/static/notebooks
        - cd epi2me-labs.github.io
        - git branch
        - git add .
        - git status
        - echo `git commit -m "Rebuilt notebooks" && git push`
    only:
        - tags
