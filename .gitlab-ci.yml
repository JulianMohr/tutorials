variables:
      OWNER: ontresearch
      GIT_SUBMODULE_STRATEGY: recursive
      IMAGENAME: "epi2melabs-notebook"
image: ${IMAGE}

stages:
    - build
    - push

build:docker:
    stage: build
    only:
        - branches
    before_script:
        - apk add make bash git openssl py3-virtualenv python3
    script:
        - echo "Logging in to internal gitlab container registry";
        - echo ${CI_BUILD_TOKEN} | docker login --username gitlab-ci-token --password-stdin ${ONTREGISTRY};
        - PYTHON=python3 make ${IMAGENAME};
        - TAG=${ONTREGISTRY}/${CI_PROJECT_PATH}/${IMAGENAME}:${CI_COMMIT_REF_NAME};
        - echo "Pushing ${TAG}";
        - docker tag $OWNER/${IMAGENAME}:latest ${TAG};
        - docker push ${TAG};
        # on dev tag/push with commit hash also
        - if [[ ${CI_COMMIT_BRANCH} == 'dev' ]]; then
              DEVTAG=${TAG}-${CI_COMMIT_SHORT_SHA};
              echo "Pushing ${DEV_TAG}";
              docker tag $OWNER/${IMAGENAME}:latest ${DEVTAG};
              docker push ${DEVTAG};
          fi
        - echo "All done";


# push to dockerhub, requires target image ${TAG}
.pushhubstub: &push_hub
    stage: push
    before_script:
        - ORIG_TAG=${ONTREGISTRY}/${CI_PROJECT_PATH}/${IMAGENAME}:dev-${CI_COMMIT_SHORT_SHA}
        - echo "Pulling ${ORIG_TAG}"
        - docker pull ${ORIG_TAG}
    script:
        - echo ${DOCKERHUB_TOKEN} | docker login --username epi2melabs --password-stdin
        - echo "Pushing ${TAG}"
        - docker tag ${ORIG_TAG} ${TAG}
        - docker push ${TAG}

# Push git tags to dockerhub
push:tag-dockerhub:
    only:
        - tags
    variables:
        TAG: ontresearch/${IMAGENAME}:${CI_COMMIT_TAG}
    <<: *push_hub

# Push dev commit to dockerhub
push:dev-dockerhub:
    only:
        - /^dev$/
    except:
        - tags
    variables:
        TAG: ontresearch/${IMAGENAME}:dev
    <<: *push_hub
